<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>法炼的进阶之旅</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-07T06:45:30.518Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>法炼</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>jar包合并</title>
    <link href="http://yoursite.com/2019/11/07/jar%E5%8C%85%E5%90%88%E5%B9%B6/"/>
    <id>http://yoursite.com/2019/11/07/jar包合并/</id>
    <published>2019-11-07T02:43:28.000Z</published>
    <updated>2019-11-07T06:45:30.518Z</updated>
    
    <content type="html"><![CDATA[<p>一开始听到jar包合并的时候，真的是一脸懵逼的，两个不同的jar包，都已经开发好了，这怎么合并？反编译？破解源码，然后再自己整合？？？卧槽，那这得是多么屌逼的事。于是怀着踏上成为强者的道路，义无反顾的向前冲。</p><p>网上百度一番之后，看着个个短小精悍的博客文章，总有一种咋这么简单的感觉。哎，不管了，程序员的cv大法先献祭一番再说，毕竟先把路走通了，再来考虑路是怎么修的，这样不仅可以节省时间，而且收获也更多。</p><h2 id="使用jar命令合并jar包"><a href="#使用jar命令合并jar包" class="headerlink" title="使用jar命令合并jar包"></a>使用jar命令合并jar包</h2><a id="more"></a><p><strong><em>注意：为方便合并jar包，先将要合并的jar包放在同一个文件夹下</em></strong></p><ul><li>打开cmd输入jar，查看jar命令帮助</li></ul><p><img src="/img/%E5%AE%89%E5%8D%93%E5%B0%8F%E7%9F%A5%E8%AF%86/jar%E5%90%88%E5%B9%B601.png" alt="img"></p><ul><li>了解了关于jar命令的使用之后，下面开始使用jar命令合并jar包</li></ul><p><img src="/img/%E5%AE%89%E5%8D%93%E5%B0%8F%E7%9F%A5%E8%AF%86/jar%E5%90%88%E5%B9%B602.png" alt="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. cd到放置要合并的jar包的文件夹</span><br><span class="line">2. 创建一个文件夹用于存放每个jar包的class文件和合并后的jar包</span><br><span class="line">3. cd到刚创建的文件夹</span><br><span class="line">4. 提取上一级目录中的classes.jar中的class文件到tmp目录中</span><br><span class="line">5. 提取上一级目录中的rxjava-1.1.3.jar中的class文件到tmp目录中</span><br><span class="line">6. 合并4，5步骤中提取出来的class文件到doublejar.jar(名字随意)中</span><br></pre></td></tr></table></figure><p>一顿猛如虎的操作之后，jar包合并便成功了，导入项目测试之后也没问题。一般很多人到这个步骤之后就开心的觉得自己掌握了jar包合并，关掉之前搜索的网页，开始将jar包合并运用到自己的实际项目中。</p><p>但区分一个程序员是不是优秀的，那就是看他会不会主动思考。</p><p>仔细想一想提取这一词咋感觉那么熟悉呢？</p><p>等等，提取不就是解压吗？</p><p>解压？我靠，jar包的本质不就是压缩包吗，那jar合并的本质其实就是先解压每个jar包，然后再把解压出来的class文件一起压缩成.jar后缀的压缩文件。</p><p>检验环节开始，选中classes.jar右键解压到当前文件夹，接着对rxjava-1.1.3.jar进行同样的操作，然后选中刚解压出来的所有文件夹，右键压缩成doublejar.jar(名字随意)，最后将doublejar.jar导入到项目中测试没问题。</p><p>哎，路漫漫其修远兮，吾将上下而求索！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一开始听到jar包合并的时候，真的是一脸懵逼的，两个不同的jar包，都已经开发好了，这怎么合并？反编译？破解源码，然后再自己整合？？？卧槽，那这得是多么屌逼的事。于是怀着踏上成为强者的道路，义无反顾的向前冲。&lt;/p&gt;
&lt;p&gt;网上百度一番之后，看着个个短小精悍的博客文章，总有一种咋这么简单的感觉。哎，不管了，程序员的cv大法先献祭一番再说，毕竟先把路走通了，再来考虑路是怎么修的，这样不仅可以节省时间，而且收获也更多。&lt;/p&gt;
&lt;h2 id=&quot;使用jar命令合并jar包&quot;&gt;&lt;a href=&quot;#使用jar命令合并jar包&quot; class=&quot;headerlink&quot; title=&quot;使用jar命令合并jar包&quot;&gt;&lt;/a&gt;使用jar命令合并jar包&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="安卓" scheme="http://yoursite.com/tags/%E5%AE%89%E5%8D%93/"/>
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="安卓小知识" scheme="http://yoursite.com/tags/%E5%AE%89%E5%8D%93%E5%B0%8F%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>安卓小知识之手机分辨率与尺寸</title>
    <link href="http://yoursite.com/2019/11/01/%E5%AE%89%E5%8D%93%E5%B0%8F%E7%9F%A5%E8%AF%86%E4%B9%8B%E6%89%8B%E6%9C%BA%E5%88%86%E8%BE%A8%E7%8E%87%E4%B8%8E%E5%B0%BA%E5%AF%B8/"/>
    <id>http://yoursite.com/2019/11/01/安卓小知识之手机分辨率与尺寸/</id>
    <published>2019-11-01T03:21:33.000Z</published>
    <updated>2019-11-01T06:48:44.134Z</updated>
    
    <content type="html"><![CDATA[<p>手机适配一直都是安卓开发的一大难题，原因在于形形色色的屏幕分辨率和屏幕的尺寸大小。没有统一的标准，这就使得安卓开发者想要在不同品牌的手机上完美的显示自己的APP界面，就不得不在屏幕适配上下足功夫。为了能够让安卓开开发者更好的做好屏幕适配，谷歌也推出了有关屏幕适配的一套标准，想要做好屏幕适配，作为安卓开发者的你也必须对下面这些信息有所了解。</p><a id="more"></a><h2 id="屏幕分辨率"><a href="#屏幕分辨率" class="headerlink" title="屏幕分辨率"></a>屏幕分辨率</h2><p>指的是屏幕上横向的像素点个数*纵向的像素点个数，如1920x1080，1080x720等</p><h2 id="尺寸"><a href="#尺寸" class="headerlink" title="尺寸"></a>尺寸</h2><p>指的是屏幕斜对角线的长度，单位是英寸（inch），1inch = 2.54厘米</p><h2 id="DPI-PPI"><a href="#DPI-PPI" class="headerlink" title="DPI(PPI)"></a>DPI(PPI)</h2><p>表示一英寸长度上的像素点数，用来衡量显示器的清晰程度，用公式可以表达为DPI=px/inch</p><p>假设一个5寸大小的显示屏分辨率为1920x1080，则该显示屏的DPI为440，如下图所示：</p><p><img src="/img/%E5%AE%89%E5%8D%93%E5%B0%8F%E7%9F%A5%E8%AF%86/DPI%E4%B8%BE%E4%BE%8B.png" alt="img"></p><h2 id="density"><a href="#density" class="headerlink" title="density"></a>density</h2><p>表示1dp上的像素点数，用公式可以表达为：density=px/dp</p><p>dp是谷歌为了适配不同的分辨率而创造出来的单位，它跟英尺（inch）的关系为1dp=1/160 inch</p><p>因此，根据DPI和density的计算公式又可以推算出另一条density的计算公式：density=DPI/160</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;手机适配一直都是安卓开发的一大难题，原因在于形形色色的屏幕分辨率和屏幕的尺寸大小。没有统一的标准，这就使得安卓开发者想要在不同品牌的手机上完美的显示自己的APP界面，就不得不在屏幕适配上下足功夫。为了能够让安卓开开发者更好的做好屏幕适配，谷歌也推出了有关屏幕适配的一套标准，想要做好屏幕适配，作为安卓开发者的你也必须对下面这些信息有所了解。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="安卓" scheme="http://yoursite.com/tags/%E5%AE%89%E5%8D%93/"/>
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>安卓小知识之无线调试和.9图片</title>
    <link href="http://yoursite.com/2019/10/30/%E5%AE%89%E5%8D%93%E5%B0%8F%E7%9F%A5%E8%AF%86%E4%B9%8B%E6%97%A0%E7%BA%BF%E8%B0%83%E8%AF%95%E5%92%8C.9%E5%9B%BE%E7%89%87/"/>
    <id>http://yoursite.com/2019/10/30/安卓小知识之无线调试和.9图片/</id>
    <published>2019-10-30T03:21:05.000Z</published>
    <updated>2019-10-30T07:51:44.303Z</updated>
    
    <content type="html"><![CDATA[<h2 id="无线调试"><a href="#无线调试" class="headerlink" title="无线调试"></a>无线调试</h2><p>每次使用USB进行安卓测试的时候都要拔插数据线，而且笔者的手机偶尔出现电脑无法识别手机的情况，这时候还得重启一下手机，实在让人烦不胜烦。今天在阅读安卓书籍的时候发现可以使用无线调试实在令人开心无比，就直接上手实战一番，顺便记录一下遇到的问题。</p><a id="more"></a><ul><li><strong><em>注意：要使用无线调试功能必须保证手机和电脑在同一个局域网中，可以电脑连接手机热点，或者手机连接电脑热点，或者手机、电脑连接同一个热点；并且保证电脑可以ping通手机的ip</em></strong></li></ul><p>第一次进行无线调试时，首先还是需要usb连接电脑，确保电脑已经识别手机，然后电脑打开cmd，进行下图操作（图片为网上资源）：</p><p><img src="/img/%E5%AE%89%E5%8D%93%E5%B0%8F%E7%9F%A5%E8%AF%86/%E6%97%A0%E7%BA%BF%E8%B0%83%E8%AF%95.png" alt="img"></p><ul><li><p>adb devices</p><p>​    显示当前与电脑连接的设备</p></li><li><p>adb tcpip 5555</p><p>​    给要无线连接的手机设置端口，端口号在0—65535之间取值，默认端口号为5555。第一次使用无线连接之前即使采用默认端口也要执行该命令</p></li><li><p>adb connect 192.168.0.104:5555</p><p>​    进行无线连接，192.168.0.104为要无线连接的手机的ip地址，5555为前面设置的端口号</p><p>至此，手机与电脑已经连接成功，可以进行无线调试。当手机要与电脑断开连接时，可以使用adb disconnect 192.168.0.104：5555命令断开连接。</p></li></ul><h2 id="9图片"><a href="#9图片" class="headerlink" title=".9图片"></a>.9图片</h2><p>点9图片是安卓中为处理图片拉伸产生的一种图片格式，AS中集成了处理该格式的功能，使用起来也十分的方便，具体使用步骤如下：</p><ul><li>选中需要处理的图片——》点击鼠标右键——》点击create 9 patch file</li></ul><p><img src="/img/%E5%AE%89%E5%8D%93%E5%B0%8F%E7%9F%A5%E8%AF%86/%E7%82%B99%E5%9B%BE%E7%89%8701.png" alt="img"></p><ul><li><p>双击打开前面创建的点9图片，按照下图操作编辑：</p><p><img src="/img/%E5%AE%89%E5%8D%93%E5%B0%8F%E7%9F%A5%E8%AF%86/%E7%82%B99%E5%9B%BE%E7%89%8702.png" alt="img"></p></li></ul><p>最终效果如下图，可以看到四个圆角并没有因为图片拉伸而变形</p><p><img src="/img/%E5%AE%89%E5%8D%93%E5%B0%8F%E7%9F%A5%E8%AF%86/%E7%82%B99%E5%9B%BE%E7%89%8703.png" alt="img"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;无线调试&quot;&gt;&lt;a href=&quot;#无线调试&quot; class=&quot;headerlink&quot; title=&quot;无线调试&quot;&gt;&lt;/a&gt;无线调试&lt;/h2&gt;&lt;p&gt;每次使用USB进行安卓测试的时候都要拔插数据线，而且笔者的手机偶尔出现电脑无法识别手机的情况，这时候还得重启一下手机，实在让人烦不胜烦。今天在阅读安卓书籍的时候发现可以使用无线调试实在令人开心无比，就直接上手实战一番，顺便记录一下遇到的问题。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="安卓" scheme="http://yoursite.com/tags/%E5%AE%89%E5%8D%93/"/>
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>gradle打包讲解</title>
    <link href="http://yoursite.com/2019/10/28/gradle%E6%89%93%E5%8C%85%E8%AE%B2%E8%A7%A3/"/>
    <id>http://yoursite.com/2019/10/28/gradle打包讲解/</id>
    <published>2019-10-28T07:40:30.000Z</published>
    <updated>2019-10-29T11:12:02.020Z</updated>
    
    <content type="html"><![CDATA[<ul><li><strong><em>说明：本教程实战环境为win10系统+AndroidStudio(简称AS)3.4</em></strong></li></ul><p>AS作为安卓开发的IDE使用gradle进行管理，在AS使用gradle的指令即可以使用命令行的方式，也可以在gradle的图形化界面直接双击对应的task。本教程主要使用图形化界面的方式实现gradle打包。在使用图形化界面方式实现gradle打包之前认识一下AS中的gradle的图形化界面。点击最右边的Gradle按钮，出现gradle的图形化界面，如下图：</p><a id="more"></a><p><img src="/img/gradle%E6%89%93%E5%8C%85/gradleTask.png" alt="img"></p><p>红色框中的task是关于打包的主要task，我们先来认识一下他们</p><ul><li>assemble task</li></ul><p>包含了AssembleDebug和AssembleRelease两个task，双击该task会执行与命令行使用gradle assemble指令相同的效果，执行成功后gradle会编译出两个Apk——debug和release版本。</p><ul><li>build</li></ul><p>包含了check和assemble两个task，双击该task会执行与命令行使用gradle build指令相同的效果，check task用于执行检查任务</p><ul><li>clean</li></ul><p>双击该task会执行与命令行使用gradle clean指令相同的效果，执行成功后会清理所有的中间编译结果，这个指令使用的非常广泛。当遇到一些比较莫名其妙的gradle编译问题时，通常执行该task来清理中间数据。</p><ul><li>assembleDebug</li></ul><p>双击该task会执行与命令行使用gradle assembleDebug指令相同的效果，执行成功后会编译出debug版本的apk</p><ul><li>assembleRelease</li></ul><p>双击该task会执行与命令行使用gradle assembleRelease指令相同的效果，执行成功后会编译出release版本的apk</p><p>注意：如果主moudle中的gradle配置文件中没有声名签名文件的话，编译出来的release版本的apk是未签名的</p><p><strong>编译带签名的release版本apk的步骤</strong></p><p>1)      点击build-》点击红色框中的位置</p><p><img src="/img/gradle%E6%89%93%E5%8C%85/signConfig01.png" alt="img"></p><p>2)      选择APK-》点击next</p><p><img src="/img/gradle%E6%89%93%E5%8C%85/signConfig02.png" alt="img"></p><p>3)      点击create new</p><p><img src="/img/gradle%E6%89%93%E5%8C%85/signConfig03.png" alt="img"></p><p>4)      编写签名文件，点击ok</p><p><img src="/img/gradle%E6%89%93%E5%8C%85/signConfig04.png" alt="img"></p><p>5)      点击next</p><p><img src="/img/gradle%E6%89%93%E5%8C%85/signConfig05.png" alt="img"></p><p>6)      点击finish</p><p><img src="/img/gradle%E6%89%93%E5%8C%85/signConfig06.png" alt="img"></p><p>此时AS也会编译生成一个release版本的apk，但执行前面可以生成release版本apk的task时，生成的apk还是未签名的，下次要生成带签名的release版本的apk时，又要重新执行前面的步骤，当然签名文件可以复用，不用重新编写。</p><p>想要通过双击task一键生成带签名的release版本的apk只要将前面的签名文件信息配置在主moudle的gradle配置文件中即可，步骤如下：</p><ul><li><strong><em>注意：前面方式生成的签名文件如果不在项目根目录的app目录下，需将该文件转移到项目根目录的app目录下再进行下面步骤</em></strong></li></ul><p>1)      在主moudle的gradle配置文件中的android领域中填写如下信息</p><p><img src="/img/gradle%E6%89%93%E5%8C%85/signConfig07.png" alt="img"></p><p>2)      在buildType领域中的release领域中添加如下信息</p><p><img src="/img/gradle%E6%89%93%E5%8C%85/signConfig08.png" alt="img"></p><p>3)      执行gradle界面中的assembleRelease task即可一键生成带签名的release版本apk，如下图</p><p><img src="/img/gradle%E6%89%93%E5%8C%85/signConfig09.png" alt="img"></p><p>至此，通过点击task一键生成带签名信息的release版本的apk步骤已完成</p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;说明：本教程实战环境为win10系统+AndroidStudio(简称AS)3.4&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AS作为安卓开发的IDE使用gradle进行管理，在AS使用gradle的指令即可以使用命令行的方式，也可以在gradle的图形化界面直接双击对应的task。本教程主要使用图形化界面的方式实现gradle打包。在使用图形化界面方式实现gradle打包之前认识一下AS中的gradle的图形化界面。点击最右边的Gradle按钮，出现gradle的图形化界面，如下图：&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="安卓" scheme="http://yoursite.com/tags/%E5%AE%89%E5%8D%93/"/>
    
      <category term="gradle打包" scheme="http://yoursite.com/tags/gradle%E6%89%93%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>安卓录像</title>
    <link href="http://yoursite.com/2019/10/18/%E5%AE%89%E5%8D%93%E5%BD%95%E5%83%8F/"/>
    <id>http://yoursite.com/2019/10/18/安卓录像/</id>
    <published>2019-10-18T01:12:24.000Z</published>
    <updated>2019-10-18T07:34:36.240Z</updated>
    
    <content type="html"><![CDATA[<p>相同时间长度的视频大小主要跟比特率（码率）、分辨率有关；码率一定的情况下，分辨率越高，清晰度越低；分辨率一定的情况下，码率越高，清晰度的越高。因此，控制好视频的码率和分辨率，就可以平衡视频的清晰度和大小，实现视频的压缩。而在安卓中关于视频录制的相关类：MediaRecorder就有两个方法可以设置这两个参数。setVideoSize方法可以设置录制的视频的分辨率，setVideoEncodingBitRate方法可以设置视频的码率。</p><p>安卓中实现视频录制的大概步骤如下：实例化一个camera对象，将该对象赋值给MediaRecorder对象，通过MediaRecorder对象控制视频录制的开始与结束。</p><a id="more"></a><h1 id="一、camera"><a href="#一、camera" class="headerlink" title="一、camera"></a>一、camera</h1><p>关于Camera可以参考<a href="https://www.jianshu.com/p/f8d0d1467584" target="_blank" rel="noopener">https://www.jianshu.com/p/f8d0d1467584</a></p><p>实例化Camera步骤如下：</p><ul><li>释放相机的引用，即判断相机是否为空，不为空则释放</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">releaseCamera</span><span class="params">(Camera mCamera)</span></span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(mCamera != <span class="keyword">null</span>)&#123;</span><br><span class="line">           mCamera.stopPreview();<span class="comment">//停止预览</span></span><br><span class="line">           mCamera.release();<span class="comment">//释放相机</span></span><br><span class="line">           mCamera = <span class="keyword">null</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><ul><li>根据给定的标志获取相机的id</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">findCamera</span><span class="params">(<span class="keyword">int</span> flag)</span></span>&#123;</span><br><span class="line">       <span class="keyword">int</span> cameraCount = <span class="number">0</span>;</span><br><span class="line">       Camera.CameraInfo cameraInfo = <span class="keyword">new</span> Camera.CameraInfo();</span><br><span class="line">       cameraCount = Camera.getNumberOfCameras();<span class="comment">//获取手机相机的个数</span></span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> index = <span class="number">0</span>;index&lt;cameraCount;index++)&#123;</span><br><span class="line">           Camera.getCameraInfo(index,cameraInfo);</span><br><span class="line">           <span class="keyword">if</span>(cameraInfo.facing == flag)</span><br><span class="line">               <span class="keyword">return</span> index;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><ul><li>根据相机id实例化相机</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Camera <span class="title">createCamera</span><span class="params">(<span class="keyword">int</span> cameraIndex)</span></span>&#123;</span><br><span class="line">     <span class="keyword">return</span> Camera.open(cameraIndex);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><ul><li>设置相机预览的界面</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">          mCamera.setPreviewDisplay(mSurfaceHolder);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>mSurfaceHolder是一个SurfaceHolder对象</p><p>SurfaceHolder官方解释：一个抽象接口，给持有surface的对象使用。它可以控制surface的大小和格式，编辑surface中的像素，以及监听surface的变化。这个接口通常通过SurfaceView类获得</p><p>SurfaceHolder中有一个Callbcak接口，它有3个回调方法</p><ol><li>surfaceCreated(SurfaceHolder holder)<br>surface第一次创建时回调</li><li>surfaceChanged(SurfaceHolder holder, int format, int width,int height)<br>surface变化的时候回调(格式/大小)</li><li>surfaceDestroyed(SurfaceHolder holder)<br>surface销毁的时候回调</li></ol><p>SurfaceView官方解释：SurfaceView提供了嵌入视图层级中的专用surface。你可以控制surface的格式或大小。SurfaceView负责把surface显示在屏幕的正确位置。</p><p>对SurfaceView理解：</p><ol><li>SurfaceView是一个view对象，用于在屏幕上显示相机的预览画面</li><li>SurfaceView中有两个对象，Surface和SuraceHolder。 我们通过SuraceHolder中的回调可以知道Surface的状态（创建、变化、销毁）</li><li>通过getHolder()方法获得当前SurfaceView的SuraceHolder对象</li></ol><ul><li>开始预览</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mCamera.startPreview();</span><br></pre></td></tr></table></figure><ul><li>自动对焦</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mCamera.autoFocus(myAutoFocusCallback);</span><br></pre></td></tr></table></figure><h1 id="二、MediaRecord"><a href="#二、MediaRecord" class="headerlink" title="二、MediaRecord"></a>二、MediaRecord</h1><p>在使用MediaRecorder类中的方法开始录像之前，需要对MediaRecorder对象进行配置。对于MediaRecorder对象的属性设置必须按照以下步骤执行，不然可能导致程序闪退。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">configRecord</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mRecorder == <span class="keyword">null</span>) &#123;<span class="comment">//实例化MediaRecorder对象</span></span><br><span class="line">            mRecorder = <span class="keyword">new</span> MediaRecorder();</span><br><span class="line">        &#125;</span><br><span class="line">        mRecorder.reset();<span class="comment">//重置MediaRecorder对象的状态</span></span><br><span class="line">        mCamera.unlock();<span class="comment">//解锁相机</span></span><br><span class="line">        mRecorder.setCamera(mCamera);<span class="comment">//设置相机，在设置之前必须解锁相机，不然闪退</span></span><br><span class="line">        mRecorder.setAudioSource(MediaRecorder.AudioSource.CAMCORDER);<span class="comment">//设置音频资源</span></span><br><span class="line">        mRecorder.setVideoSource(MediaRecorder.VideoSource.CAMERA);<span class="comment">//设置视频资源</span></span><br><span class="line">        mRecorder.setOutputFormat(MediaRecorder.OutputFormat.MPEG_4);<span class="comment">//设置视频输出格式</span></span><br><span class="line">        mRecorder.setAudioEncoder(MediaRecorder.AudioEncoder.AAC);<span class="comment">//设置音频编码</span></span><br><span class="line">        mRecorder.setVideoSize(<span class="number">640</span>, <span class="number">480</span>);<span class="comment">//设置分辨率</span></span><br><span class="line">        mRecorder.setVideoEncodingBitRate(<span class="number">900000</span>);<span class="comment">//设置码率</span></span><br><span class="line">        mRecorder.setVideoEncoder(MediaRecorder.VideoEncoder.H264);<span class="comment">//设置视频编码</span></span><br><span class="line">    <span class="comment">//获取当前时间作为文件名</span></span><br><span class="line">        SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyMMddHHmmss"</span>);</span><br><span class="line">        String fileName = simpleDateFormat.format(<span class="keyword">new</span> Date());</span><br><span class="line">        File f = <span class="keyword">new</span> File(getExternalCacheDir(), fileName + <span class="string">".mp4"</span>);</span><br><span class="line">        String mOutPath = f.getAbsolutePath();</span><br><span class="line">        <span class="keyword">if</span> (f.exists())</span><br><span class="line">            f.delete();</span><br><span class="line">        mRecorder.setOutputFile(mOutPath);<span class="comment">//设置视频输出路径</span></span><br><span class="line">        mRecorder.setPreviewDisplay(mSurfaceHolder.getSurface());<span class="comment">//设置预览界面</span></span><br><span class="line">        <span class="keyword">if</span> (!isBack) &#123;</span><br><span class="line">            <span class="comment">//前置摄像头拍摄保存时，需要旋转270</span></span><br><span class="line">            mRecorder.setOrientationHint(<span class="number">270</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">             <span class="comment">//后置摄像头拍摄保存时，需要旋转90</span></span><br><span class="line">            mRecorder.setOrientationHint(<span class="number">90</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            mRecorder.prepare();<span class="comment">//准备拍摄，需要捕获异常，不然程序闪退</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>完成MediaRecorder的配置时候就可以开始进行拍摄，只需调用以下方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mRecorder.start();</span><br></pre></td></tr></table></figure><p>结束拍摄时，只需调用以下方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mRecorder.stop();</span><br></pre></td></tr></table></figure><p>至此，使用安卓自定义录像，并实现视频压缩的流程已结束。详细代码参考</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;相同时间长度的视频大小主要跟比特率（码率）、分辨率有关；码率一定的情况下，分辨率越高，清晰度越低；分辨率一定的情况下，码率越高，清晰度的越高。因此，控制好视频的码率和分辨率，就可以平衡视频的清晰度和大小，实现视频的压缩。而在安卓中关于视频录制的相关类：MediaRecorder就有两个方法可以设置这两个参数。setVideoSize方法可以设置录制的视频的分辨率，setVideoEncodingBitRate方法可以设置视频的码率。&lt;/p&gt;
&lt;p&gt;安卓中实现视频录制的大概步骤如下：实例化一个camera对象，将该对象赋值给MediaRecorder对象，通过MediaRecorder对象控制视频录制的开始与结束。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="安卓" scheme="http://yoursite.com/tags/%E5%AE%89%E5%8D%93/"/>
    
      <category term="录像" scheme="http://yoursite.com/tags/%E5%BD%95%E5%83%8F/"/>
    
      <category term="视频压缩" scheme="http://yoursite.com/tags/%E8%A7%86%E9%A2%91%E5%8E%8B%E7%BC%A9/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/10/17/hello-world/"/>
    <id>http://yoursite.com/2019/10/17/hello-world/</id>
    <published>2019-10-17T03:07:41.960Z</published>
    <updated>2019-10-18T08:05:28.705Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
